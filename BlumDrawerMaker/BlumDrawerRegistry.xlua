-- ====================================================================================================================================
-- Gadgets are an entirely optional add-in to Vectric's core software products.
-- They are provided 'as-is', without any express or implied warranty, and you make use of them entirely at your own risk.
-- In no event will the author(s) or Vectric Ltd. be held liable for any damages arising from their use.
-- Permission is granted to anyone to use this software for any purpose,
-- including commercial applications, and to alter it and redistribute it freely,
-- subject to the following restrictions:
-- 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
--    If you use this software in a product, an acknowledgement in the product documentation would be appreciated but is not required.
-- 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
-- 3. This notice may not be removed or altered from any source distribution.
-- ====================================================================================================================================
-- Blum Drawer Maker is based on Easy Drawer Maker, originally written by JimAndi Gadgets of Houston Texas 2019
-- =====================================================]]
function RegistryReset() -- Reset All Settings
    if Drawer.Unit then -- Metric Setup
        Drawer.BackDadoInset = 0 -- MT changed from 19.0500
        Drawer.BackLength = 311.9000
        Drawer.BackThickness = 12.7000
        Drawer.BackWidth = 117.3000
        Drawer.BottomDadoInset = 13.0000 -- fixed constant (metric)
        Drawer.BottomGap = 12.7000
        Drawer.BottomPanelLength = 491.5800
        Drawer.BottomPanelWidth = 310.6300
        Drawer.BottomThickness = 6.0000
        Drawer.FrontLength = 324.6000
        Drawer.FrontThickness = 19.0000
        Drawer.FrontWidth = 117.3000
        Drawer.Height = 117.3000
        Drawer.Length = 524.6000
        Drawer.OpeningDepth = 480.0000
        Drawer.OpeningHeight = 150.0000
        Drawer.OpeningWidth = 350.0000
        Drawer.SideFingerWidth = 13.0333
        Drawer.SideGap = 12.7000
        Drawer.SideLength = 524.6000
        Drawer.SideThickness = 14.0000
        Drawer.SideWidth = 117.3000
        Drawer.TopGap = 20.0000
        Drawer.Width = 324.6000
        Milling.BlindTabThickness = 2.5400
        Milling.DadoClearance = 1.2700
        Milling.DadoHeight = 6.3500
        Milling.FingerClearance = 0.1270
        Milling.FingerToolDia = 3.0000
        Milling.FingerToolRadius = 1.5875
        Milling.PartGap = 19.0500
        Milling.PocketToolDia = 6.0000
        Milling.ProfileToolDia = 6.0000
        Milling.ProfileToolRadius = 3.0000
        MillTool1.InMM = true
        MillTool1.ToolDia = 3.0
        MillTool1.Stepdown = 5.0
        MillTool1.Stepover = 2.0
        MillTool1.RateUnits = 1
        MillTool1.FeedRate = 762
        MillTool1.PlungeRate = 381
        MillTool2.InMM = true
        MillTool2.ToolDia = 3.0
        MillTool2.Stepdown = 5.0
        MillTool2.Stepover = 2.0
        MillTool2.RateUnits = 1
        MillTool2.FeedRate = 762
        MillTool2.PlungeRate = 381
        MillTool3.InMM = true
        MillTool3.ToolDia = 3.0
        MillTool3.Stepdown = 5.0
        MillTool3.Stepover = 2.0
        MillTool3.RateUnits = 1
        MillTool3.FeedRate = 762
        MillTool3.PlungeRate = 381
        MillTool4.InMM = true
        MillTool4.ToolDia = 3.0
        MillTool4.Stepdown = 5.0
        MillTool4.Stepover = 2.0
        MillTool4.RateUnits = 1
        MillTool4.FeedRate = 762
        MillTool4.PlungeRate = 381
        MillTool5.InMM = true
        MillTool5.ToolDia = 3.0
        MillTool5.Stepdown = 5.0
        MillTool5.Stepover = 2.0
        MillTool5.RateUnits = 1
        MillTool5.FeedRate = 762
        MillTool5.PlungeRate = 381
        MillTool6.InMM = true
        MillTool6.ToolDia = 3.0
        MillTool6.Stepdown = 5.0
        MillTool6.Stepover = 2.0
        MillTool6.RateUnits = 1
        MillTool6.FeedRate = 762
        MillTool5.PlungeRate = 381
    else -- Inch Setup
        Drawer.BackDadoInset = 0.0 -- MT changed from 0.7500
        Drawer.BackLength = 18.2500
        Drawer.BackThickness = 0.5000
        Drawer.BackWidth = 5.2500
        Drawer.BottomDadoInset = 0.5000 -- fixed constant (imperial)
        Drawer.BottomGap = 0.5000
        Drawer.BottomPanelLength = 18.2500
        Drawer.BottomPanelWidth = 5.2500
        Drawer.BottomThickness = 0.2500
        Drawer.FrontLength = 18.2500
        Drawer.FrontThickness = 0.5000
        Drawer.FrontWidth = 1.2500
        Drawer.Height = 6.0000
        Drawer.Length = 16.0000
        Drawer.OpeningDepth = 18.0000
        Drawer.OpeningHeight = 6.0000
        Drawer.OpeningWidth = 16.0000
        Drawer.SideFingerWidth = 0.5000
        Drawer.SideGap = 0.5000
        Drawer.SideLength = 18.2500
        Drawer.SideThickness = 0.5000
        Drawer.SideWidth = 1.2500
        Drawer.TopGap = 1.5000
        Drawer.Width = 18.0000
        Milling.DadoHeight = 0.2500
        Milling.BlindTabThickness = 0.1000
        Milling.FingerClearance = 0.0050
        Milling.FingerToolDia = 0.1250
        Milling.FingerToolRadius = 0.0625
        Milling.PartGap = 0.7500
        Milling.DadoClearance = 0.0500
        Milling.PocketToolDia = 0.2500
        Milling.ProfileToolDia = 0.2500
        Milling.ProfileToolRadius = 0.1250
        MillTool1.InMM = false
        MillTool1.ToolDia = 0.1250
        MillTool1.Stepdown = 0.2000
        MillTool1.Stepover = 0.0825
        MillTool1.RateUnits = 4
        MillTool1.FeedRate = 30.000
        MillTool1.PlungeRate = 15.000
        MillTool2.InMM = false
        MillTool2.ToolDia = 0.1250
        MillTool2.Stepdown = 0.2000
        MillTool2.Stepover = 0.0825
        MillTool2.RateUnits = 4
        MillTool2.FeedRate = 30.000
        MillTool2.PlungeRate = 15.000
        MillTool3.InMM = false
        MillTool3.ToolDia = 0.1250
        MillTool3.Stepdown = 0.2000
        MillTool3.Stepover = 0.0825
        MillTool3.RateUnits = 4
        MillTool3.FeedRate = 30.000
        MillTool3.PlungeRate = 15.000
        MillTool4.InMM = false
        MillTool4.ToolDia = 0.1250
        MillTool4.Stepdown = 0.2000
        MillTool4.Stepover = 0.0825
        MillTool4.RateUnits = 4
        MillTool4.FeedRate = 30.000
        MillTool4.PlungeRate = 15.000
        MillTool5.InMM = false
        MillTool5.ToolDia = 0.1250
        MillTool5.Stepdown = 0.2000
        MillTool5.Stepover = 0.0825
        MillTool5.RateUnits = 4
        MillTool5.FeedRate = 30.000
        MillTool5.PlungeRate = 15.000
        MillTool6.InMM = false
        MillTool6.ToolDia = 0.1250
        MillTool6.Stepdown = 0.2000
        MillTool6.Stepover = 0.0825
        MillTool6.RateUnits = 4
        MillTool6.FeedRate = 30.000
        MillTool5.PlungeRate = 15.000
    end -- if end
    DialogWindow.AboutXY = "719 x 581"
    DialogWindow.DrawerXY = "580 x 493"
    DialogWindow.LayersXY = "495 x 453"
    DialogWindow.MillingXY = "578 x 337"
    DialogWindow.ProjectXY = "576 x 298"
    DialogWindow.HelpMainXY = "785 x 639"
    DialogWindow.HelpSubXY = "781 x 643"
    DialogWindow.ImportSettingsXY = "725 x 160"
    DialogWindow.HelpXY = "617 x 613"
    DialogWindow.ScreenScale = "100%" -- Added by Sharkcutup 7/10/2025
    Milling.JointStyleName = "Dog Bone"
    Milling.LNBackPocket = "BackPocketProfile"
    Milling.LNBlum = "BlumMilling"
    Milling.DrawerStyleName = [[Captive Bottom (Dado)]]
    -- Blum hardware options fixed
    Milling.BlumSoftClose = "Yes"
    Milling.BlumHole = "Yes"
    Milling.LNBackProfile = "BackPanelProfile"
    Milling.LNBottomProfile = "Bottom Profile"
    Milling.LNDrawNotes = "Drawing Notes"
    Milling.LNFingerBox = "BoxJoint"
    Milling.LNFrontPocket = "Front Panel Pocket"
    Milling.LNFrontBlind = "Front Panel Blind"
    Milling.LNFrontProfile = "Front Panel Profile"
    Milling.LNPartLabels = "LabelParts"
    Milling.LNSidePocket = "Side Panel Pocket"
    Milling.LNSideProfile = "Side Panel Profile"
    Milling.LNSideBlind = "Side Panel Blind"
    Milling.LNBackPocketColor = "Blue"
    Milling.LNBlumColor = "Black"
    Milling.LNBackProfileColor = "Black"
    Milling.LNBottomProfileColor = "Black"
    Milling.LNDrawNotesColor = "Blue"
    Milling.LNFingerBoxColor = "Green"
    Milling.LNFrontPocketColor = "Green"
    Milling.LNFrontBlindColor = "Green"
    Milling.LNFrontProfileColor = "Red"
    Milling.LNPartLabelsColor = "Black"
    Milling.LNSidePocketColor = "Blue"
    Milling.LNSideBlindColor = "Blue"
    Milling.LNSideProfileColor = "Green"
    Drawer.Count = 1
    Drawer.SideFingerCount = 9
    MillTool1.Name = "Tool Not Selected"
    MillTool1.SpindleSpeed = 20000
    MillTool1.ToolNumber = 1
    MillTool2.Name = "Tool Not Selected"
    MillTool2.SpindleSpeed = 20000
    MillTool2.ToolNumber = 2
    MillTool3.Name = "Tool Not Selected"
    MillTool3.SpindleSpeed = 20000
    MillTool3.ToolNumber = 3
    MillTool4.Name = "Tool Not Selected"
    MillTool4.SpindleSpeed = 20000
    MillTool4.ToolNumber = 4
    MillTool5.Name = "Tool Not Selected"
    MillTool5.SpindleSpeed = 20000
    MillTool5.ToolNumber = 5
    MillTool6.Name = "Tool Not Selected"
    MillTool6.SpindleSpeed = 20000
    MillTool6.ToolNumber = 6
    Project.CodeBy = "JimAndi Gadgets"
    Project.DatFile = "Default"
    Project.CabinetName = "C1"
    Project.ProgramContact = "Who"
    Project.ProgramName = "Blum Drawer Maker"
    Project.ProgramVersion = string.format(Project.ProgramVersion)
    Project.ProgramYear = "2020"
    Project.ContactEmail = "Default@Email.com"
    Project.ContactName = "WHO"
    Project.ContactPhoneNumber = "(123)456-7890"
    Project.ProjectName = "DRAWER PROJECTS"
    Project.ProjectPath = "Default"
    RegistryWriter()
    return true
end
-- =====================================================]]
function RegistryRead() -- Read from Registry values
    local RegistryRead = Registry(Project.RegName)
    if Drawer.Unit then
        Drawer.BackDadoInset = RegistryRead:GetDouble("Drawer.BackDadoInset", 0) -- MT changed from 19.05)
        Drawer.BackLength = RegistryRead:GetDouble("Drawer.BackLength", 463.55)
        Drawer.BackThickness = RegistryRead:GetDouble("Drawer.BackThickness", 12.7)
        Drawer.BackWidth = RegistryRead:GetDouble("Drawer.BackWidth", 133.35)
        Drawer.BottomDadoInset = 13.0 -- fixed constant overrides registry
        Drawer.BottomGap = RegistryRead:GetDouble("Drawer.BottomGap", 12.7)
        Drawer.BottomPanelLength = RegistryRead:GetDouble("Drawer.BottomPanelLength", 463.55)
        Drawer.BottomPanelWidth = RegistryRead:GetDouble("Drawer.BottomPanelWidth", 133.35)
        Drawer.BottomThickness = RegistryRead:GetDouble("Drawer.BottomThickness", 6.35)
        Drawer.Count = RegistryRead:GetInt("Drawer.Count", 1)
        Drawer.FrontLength = RegistryRead:GetDouble("Drawer.FrontLength", 436.55)
        Drawer.FrontThickness = RegistryRead:GetDouble("Drawer.FrontThickness", 12.7)
        Drawer.FrontWidth = RegistryRead:GetDouble("Drawer.FrontWidth", 31.75)
        Drawer.Height = RegistryRead:GetDouble("Drawer.Height", 152.4)
        Drawer.Length = RegistryRead:GetDouble("Drawer.Length", 406.4)
        Drawer.OpeningDepth = RegistryRead:GetDouble("Drawer.OpeningDepth", 457.2)
        Drawer.OpeningHeight = RegistryRead:GetDouble("Drawer.OpeningHeight", 152.4)
        Drawer.OpeningWidth = RegistryRead:GetDouble("Drawer.OpeningWidth", 406.4)
        Drawer.SideFingerCount = RegistryRead:GetInt("Drawer.SideFingerCount", 9)
        Drawer.SideFingerWidth = RegistryRead:GetDouble("Drawer.SideFingerWidth", 12.7)
        Drawer.SideGap = RegistryRead:GetDouble("Drawer.SideGap", 12.7)
        Drawer.SideLength = RegistryRead:GetDouble("Drawer.SideLength", 463.55)
        Drawer.SideThickness = RegistryRead:GetDouble("Drawer.SideThickness", 12.7)
        Drawer.SideWidth = RegistryRead:GetDouble("Drawer.SideWidth", 31.75)
        Drawer.TopGap = RegistryRead:GetDouble("Drawer.TopGap", 38.1)
        Drawer.Width = RegistryRead:GetDouble("Drawer.Width", 457.2)
        Milling.DadoHeight = RegistryRead:GetDouble("Milling.DadoHeight", 6.35)
        Milling.BlindTabThickness = RegistryRead:GetDouble("Milling.BlindTabThickness", 2.54)
        Milling.FingerClearance = RegistryRead:GetDouble("Milling.FingerClearance", 0.127)
        Milling.FingerToolDia = RegistryRead:GetDouble("Milling.FingerToolDia", 3.0)
        Milling.FingerToolRadius = RegistryRead:GetDouble("Milling.FingerToolRadius", 1.5875)
        Milling.PartGap = RegistryRead:GetDouble("Milling.PartGap", 19.05)
        Milling.DadoClearance = RegistryRead:GetDouble("Milling.DadoClearance", 1.27)
        Milling.PocketToolDia = RegistryRead:GetDouble("Milling.PocketToolDia", 6.0)
        Milling.ProfileToolDia = RegistryRead:GetDouble("Milling.ProfileToolDia", 6.0)
        Milling.ProfileToolRadius = RegistryRead:GetDouble("Milling.ProfileToolRadius", 3.175)
        MillTool1.InMM = RegistryRead:GetBool("MillTool1.InMM", true)
        MillTool1.ToolDia = RegistryRead:GetDouble("MillTool1.ToolDia", 3.175)
        MillTool1.Stepdown = RegistryRead:GetDouble("MillTool1.Stepdown", 5.0)
        MillTool1.Stepover = RegistryRead:GetDouble("MillTool1.Stepover", 2.0)
        MillTool1.RateUnits = RegistryRead:GetInt("MillTool1.RateUnits", 4)
        MillTool1.FeedRate = RegistryRead:GetDouble("MillTool1.FeedRate", 762)
        MillTool1.PlungeRate = RegistryRead:GetDouble("MillTool1.PlungeRate", 381)
        MillTool1.ToolNumber = RegistryRead:GetInt("MillTool1.ToolNumber", 1)
        MillTool2.InMM = RegistryRead:GetBool("MillTool2.InMM", true)
        MillTool2.ToolDia = RegistryRead:GetDouble("MillTool2.ToolDia", 3.0)
        MillTool2.Stepdown = RegistryRead:GetDouble("MillTool2.Stepdown", 5.0)
        MillTool2.Stepover = RegistryRead:GetDouble("MillTool2.Stepover", 2.0)
        MillTool2.RateUnits = RegistryRead:GetInt("MillTool2.RateUnits", 4)
        MillTool2.FeedRate = RegistryRead:GetDouble("MillTool2.FeedRate", 762)
        MillTool2.PlungeRate = RegistryRead:GetDouble("MillTool2.PlungeRate", 381)
        MillTool2.ToolNumber = RegistryRead:GetInt("MillTool2.ToolNumber", 2)
        MillTool3.InMM = RegistryRead:GetBool("MillTool3.InMM", true)
        MillTool3.ToolDia = RegistryRead:GetDouble("MillTool3.ToolDia", 3.0)
        MillTool3.Stepdown = RegistryRead:GetDouble("MillTool3.Stepdown", 5.0)
        MillTool3.Stepover = RegistryRead:GetDouble("MillTool3.Stepover", 2.0)
        MillTool3.RateUnits = RegistryRead:GetInt("MillTool3.RateUnits", 4)
        MillTool3.FeedRate = RegistryRead:GetDouble("MillTool3.FeedRate", 762)
        MillTool3.PlungeRate = RegistryRead:GetDouble("MillTool3.PlungeRate", 381)
        MillTool3.ToolNumber = RegistryRead:GetInt("MillTool3.ToolNumber", 3)
        MillTool4.InMM = RegistryRead:GetBool("MillTool4.InMM", true)
        MillTool4.ToolDia = RegistryRead:GetDouble("MillTool4.ToolDia", 3.0)
        MillTool4.Stepdown = RegistryRead:GetDouble("MillTool4.Stepdown", 5.0)
        MillTool4.Stepover = RegistryRead:GetDouble("MillTool4.Stepover", 2.0)
        MillTool4.RateUnits = RegistryRead:GetInt("MillTool4.RateUnits", 4)
        MillTool4.FeedRate = RegistryRead:GetDouble("MillTool4.FeedRate", 762)
        MillTool4.PlungeRate = RegistryRead:GetDouble("MillTool4.PlungeRate", 381)
        MillTool4.ToolNumber = RegistryRead:GetInt("MillTool4.ToolNumber", 4)
        MillTool5.InMM = RegistryRead:GetBool("MillTool5.InMM", true)
        MillTool5.ToolDia = RegistryRead:GetDouble("MillTool5.ToolDia", 3.0)
        MillTool5.Stepdown = RegistryRead:GetDouble("MillTool5.Stepdown", 5.0)
        MillTool5.Stepover = RegistryRead:GetDouble("MillTool5.Stepover", 2.0)
        MillTool5.RateUnits = RegistryRead:GetInt("MillTool5.RateUnits", 4)
        MillTool5.FeedRate = RegistryRead:GetDouble("MillTool5.FeedRate", 762)
        MillTool5.PlungeRate = RegistryRead:GetDouble("MillTool5.PlungeRate", 381)
        MillTool5.ToolNumber = RegistryRead:GetInt("MillTool5.ToolNumber", 5)
        MillTool6.InMM = RegistryRead:GetBool("MillTool6.InMM", true)
        MillTool6.ToolDia = RegistryRead:GetDouble("MillTool6.ToolDia", 3.0)
        MillTool6.Stepdown = RegistryRead:GetDouble("MillTool6.Stepdown", 5.0)
        MillTool6.Stepover = RegistryRead:GetDouble("MillTool6.Stepover", 2.0)
        MillTool6.RateUnits = RegistryRead:GetInt("MillTool6.RateUnits", 4)
        MillTool6.FeedRate = RegistryRead:GetDouble("MillTool6.FeedRate", 762)
        MillTool6.PlungeRate = RegistryRead:GetDouble("MillTool6.PlungeRate", 381)
        MillTool6.ToolNumber = RegistryRead:GetInt("MillTool6.ToolNumber", 6)
    else
        Drawer.BackDadoInset = RegistryRead:GetDouble("Drawer.BackDadoInset", 0) -- MT changed from 0.7500)
        Drawer.BackLength = RegistryRead:GetDouble("Drawer.BackLength", 18.2500)
        Drawer.BackThickness = RegistryRead:GetDouble("Drawer.BackThickness", 0.5000)
        Drawer.BackWidth = RegistryRead:GetDouble("Drawer.BackWidth", 5.2500)
        Drawer.BottomDadoInset = 0.5 -- fixed constant overrides registry
        Drawer.BottomGap = RegistryRead:GetDouble("Drawer.BottomGap", 0.5000)
        Drawer.BottomPanelLength = RegistryRead:GetDouble("Drawer.BottomPanelLength", 18.2500)
        Drawer.BottomPanelWidth = RegistryRead:GetDouble("Drawer.BottomPanelWidth", 5.2500)
        Drawer.BottomThickness = RegistryRead:GetDouble("Drawer.BottomThickness", 0.2500)
        Drawer.Count = RegistryRead:GetInt("Drawer.Count", 1)
        Drawer.FrontLength = RegistryRead:GetDouble("Drawer.FrontLength", 18.2500)
        Drawer.FrontThickness = RegistryRead:GetDouble("Drawer.FrontThickness", 0.5000)
        Drawer.FrontWidth = RegistryRead:GetDouble("Drawer.FrontWidth", 1.2500)
        Drawer.Height = RegistryRead:GetDouble("Drawer.Height", 6.0000)
        Drawer.Length = RegistryRead:GetDouble("Drawer.Length", 16.0000)
        Drawer.OpeningDepth = RegistryRead:GetDouble("Drawer.OpeningDepth", 18.0000)
        Drawer.OpeningHeight = RegistryRead:GetDouble("Drawer.OpeningHeight", 6.0000)
        Drawer.OpeningWidth = RegistryRead:GetDouble("Drawer.OpeningWidth", 16.0000)
        Drawer.SideFingerCount = RegistryRead:GetInt("Drawer.SideFingerCount", 9)
        Drawer.SideFingerWidth = RegistryRead:GetDouble("Drawer.SideFingerWidth", 0.5000)
        Drawer.SideGap = RegistryRead:GetDouble("Drawer.SideGap", 0.5000)
        Drawer.SideLength = RegistryRead:GetDouble("Drawer.SideLength", 18.2500)
        Drawer.SideThickness = RegistryRead:GetDouble("Drawer.SideThickness", 0.5000)
        Drawer.SideWidth = RegistryRead:GetDouble("Drawer.SideWidth", 1.2500)
        Drawer.TopGap = RegistryRead:GetDouble("Drawer.TopGap", 1.5000)
        Drawer.Width = RegistryRead:GetDouble("Drawer.Width", 18.0000)
        Milling.DadoHeight = RegistryRead:GetDouble("Milling.DadoHeight", 0.2500)
        Milling.BlindTabThickness = RegistryRead:GetDouble("Milling.BlindTabThickness", 0.1000)
        Milling.FingerClearance = RegistryRead:GetDouble("Milling.FingerClearance", 0.0050)
        Milling.FingerToolDia = RegistryRead:GetDouble("Milling.FingerToolDia", 0.1250)
        Milling.FingerToolRadius = RegistryRead:GetDouble("Milling.FingerToolRadius", 0.0625)
        Milling.PartGap = RegistryRead:GetDouble("Milling.PartGap", 0.7500)
        Milling.DadoClearance = RegistryRead:GetDouble("Milling.DadoClearance", 0.0500)
        Milling.PocketToolDia = RegistryRead:GetDouble("Milling.PocketToolDia", 0.2500)
        Milling.ProfileToolDia = RegistryRead:GetDouble("Milling.ProfileToolDia", 0.2500)
        Milling.ProfileToolRadius = RegistryRead:GetDouble("Milling.ProfileToolRadius", 0.1250)
        MillTool1.InMM = RegistryRead:GetBool("MillTool1.InMM", false)
        MillTool1.ToolDia = RegistryRead:GetDouble("MillTool1.ToolDia", 0.1250)
        MillTool1.Stepdown = RegistryRead:GetDouble("MillTool1.Stepdown", 0.2000)
        MillTool1.Stepover = RegistryRead:GetDouble("MillTool1.Stepover", 0.0825)
        MillTool1.RateUnits = RegistryRead:GetInt("MillTool1.RateUnits", 4)
        MillTool1.FeedRate = RegistryRead:GetDouble("MillTool1.FeedRate", 30.000)
        MillTool1.PlungeRate = RegistryRead:GetDouble("MillTool1.PlungeRate", 15.000)
        MillTool1.ToolNumber = RegistryRead:GetInt("MillTool1.ToolNumber", 1)
        MillTool2.InMM = RegistryRead:GetBool("MillTool2.InMM", false)
        MillTool2.ToolDia = RegistryRead:GetDouble("MillTool2.ToolDia", 0.1250)
        MillTool2.Stepdown = RegistryRead:GetDouble("MillTool2.Stepdown", 0.2000)
        MillTool2.Stepover = RegistryRead:GetDouble("MillTool2.Stepover", 0.0825)
        MillTool2.RateUnits = RegistryRead:GetInt("MillTool2.RateUnits", 4)
        MillTool2.FeedRate = RegistryRead:GetDouble("MillTool2.FeedRate", 30.000)
        MillTool2.PlungeRate = RegistryRead:GetDouble("MillTool2.PlungeRate", 15.000)
        MillTool2.ToolNumber = RegistryRead:GetInt("MillTool2.ToolNumber", 2)
        MillTool3.InMM = RegistryRead:GetBool("MillTool3.InMM", false)
        MillTool3.ToolDia = RegistryRead:GetDouble("MillTool3.ToolDia", 0.1250)
        MillTool3.Stepdown = RegistryRead:GetDouble("MillTool3.Stepdown", 0.2000)
        MillTool3.Stepover = RegistryRead:GetDouble("MillTool3.Stepover", 0.0825)
        MillTool3.RateUnits = RegistryRead:GetInt("MillTool3.RateUnits", 4)
        MillTool3.FeedRate = RegistryRead:GetDouble("MillTool3.FeedRate", 30.000)
        MillTool3.PlungeRate = RegistryRead:GetDouble("MillTool3.PlungeRate", 15.000)
        MillTool3.ToolNumber = RegistryRead:GetInt("MillTool3.ToolNumber", 3)
        MillTool4.InMM = RegistryRead:GetBool("MillTool4.InMM", false)
        MillTool4.ToolDia = RegistryRead:GetDouble("MillTool4.ToolDia", 0.1250)
        MillTool4.Stepdown = RegistryRead:GetDouble("MillTool4.Stepdown", 0.2000)
        MillTool4.Stepover = RegistryRead:GetDouble("MillTool4.Stepover", 0.0825)
        MillTool4.RateUnits = RegistryRead:GetInt("MillTool4.RateUnits", 4)
        MillTool4.FeedRate = RegistryRead:GetDouble("MillTool4.FeedRate", 30.000)
        MillTool4.PlungeRate = RegistryRead:GetDouble("MillTool4.PlungeRate", 15.000)
        MillTool4.ToolNumber = RegistryRead:GetInt("MillTool4.ToolNumber", 4)
        MillTool5.InMM = RegistryRead:GetBool("MillTool5.InMM", false)
        MillTool5.ToolDia = RegistryRead:GetDouble("MillTool5.ToolDia", 0.1250)
        MillTool5.Stepdown = RegistryRead:GetDouble("MillTool5.Stepdown", 0.2000)
        MillTool5.Stepover = RegistryRead:GetDouble("MillTool5.Stepover", 0.0825)
        MillTool5.RateUnits = RegistryRead:GetInt("MillTool5.RateUnits", 4)
        MillTool5.FeedRate = RegistryRead:GetDouble("MillTool5.FeedRate", 30.000)
        MillTool5.PlungeRate = RegistryRead:GetDouble("MillTool5.PlungeRate", 15.000)
        MillTool5.ToolNumber = RegistryRead:GetInt("MillTool5.ToolNumber", 5)
        MillTool6.InMM = RegistryRead:GetBool("MillTool6.InMM", false)
        MillTool6.ToolDia = RegistryRead:GetDouble("MillTool6.ToolDia", 0.1250)
        MillTool6.Stepdown = RegistryRead:GetDouble("MillTool6.Stepdown", 0.2000)
        MillTool6.Stepover = RegistryRead:GetDouble("MillTool6.Stepover", 0.0825)
        MillTool6.RateUnits = RegistryRead:GetInt("MillTool6.RateUnits", 4)
        MillTool6.FeedRate = RegistryRead:GetDouble("MillTool6.FeedRate", 30.000)
        MillTool6.PlungeRate = RegistryRead:GetDouble("MillTool6.PlungeRate", 15.000)
        MillTool6.ToolNumber = RegistryRead:GetInt("MillTool6.ToolNumber", 6)
    end -- if end
    Milling.JointStyleName = RegistryRead:GetString("Milling.JointStyleName", "Dog Bone")
    Milling.LNBackPocket = RegistryRead:GetString("Milling.LNBackPocket", "BackPocketProfile")
    Milling.LNBlum = RegistryRead:GetString("Milling.LNBlum", "BlumMilling")
    Milling.DrawerStyleName = RegistryRead:GetString("Milling.DrawerStyleName", [[Captive Bottom (Dado)]])
    -- Blum options fixed
    -- Blum hardware options fixed
    Milling.BlumSoftClose = "Yes"
    Milling.BlumHole = "Yes"
    Milling.LNBackProfile = RegistryRead:GetString("Milling.LNBackProfile", "BackPanelProfile")
    Milling.LNBottomProfile = RegistryRead:GetString("Milling.LNBottomProfile", "Bottom Profile")
    Milling.LNDrawNotes = RegistryRead:GetString("Milling.LNDrawNotes", "Drawing Notes")
    Milling.LNFingerBox = RegistryRead:GetString("Milling.LNFingerBox", "BoxJoint")
    Milling.LNFrontPocket = RegistryRead:GetString("Milling.LNFrontPocket", "Front Panel Pocket")
    Milling.LNFrontBlind = RegistryRead:GetString("Milling.LNFrontBlind", "Front Panel Blind")
    Milling.LNFrontProfile = RegistryRead:GetString("Milling.LNFrontProfile", "Front Panel Profile")
    Milling.LNPartLabels = RegistryRead:GetString("Milling.LNPartLabels", "LabelParts")
    Milling.LNSidePocket = RegistryRead:GetString("Milling.LNSidePocket", "Side Panel Pocket")
    Milling.LNSideProfile = RegistryRead:GetString("Milling.LNSideProfile", "Side Panel Profile")
    Milling.LNSideBlind = RegistryRead:GetString("Milling.LNSideBlind", "Side Panel Blind")
    Milling.LNBackPocketColor = RegistryRead:GetString("Milling.LNBackPocketColor", "Blue")
    Milling.LNBlumColor = RegistryRead:GetString("Milling.LNBlumColor", "Black")
    Milling.LNBackProfileColor = RegistryRead:GetString("Milling.LNBackProfileColor", "Black")
    Milling.LNBottomProfileColor = RegistryRead:GetString("Milling.LNBottomProfileColor", "Black")
    Milling.LNDrawNotesColor = RegistryRead:GetString("Milling.LNDrawNotesColor", "Blue")
    Milling.LNFingerBoxColor = RegistryRead:GetString("Milling.LNFingerBoxColor", "Green")
    Milling.LNFrontPocketColor = RegistryRead:GetString("Milling.LNFrontPocketColor", "Green")
    Milling.LNFrontBlindColor = RegistryRead:GetString("Milling.LNFrontBlindColor", "Green")
    Milling.LNFrontProfileColor = RegistryRead:GetString("Milling.LNFrontProfileColor", "Red")
    Milling.LNPartLabelsColor = RegistryRead:GetString("Milling.LNPartLabelsColor", "Black")
    Milling.LNSidePocketColor = RegistryRead:GetString("Milling.LNSidePocketColor", "Blue")
    Milling.LNSideBlindColor = RegistryRead:GetString("Milling.LNSideBlindColor", "Blue")
    Milling.LNSideProfileColor = RegistryRead:GetString("Milling.LNSideProfileColor", "Green")
    MillTool1.Name = RegistryRead:GetString("MillTool1.Name", "Tool Not Selected")
    MillTool1.SpindleSpeed = RegistryRead:GetInt("MillTool1.SpindleSpeed", 20000)
    MillTool2.Name = RegistryRead:GetString("MillTool2.Name", "Tool Not Selected")
    MillTool2.SpindleSpeed = RegistryRead:GetInt("MillTool2.SpindleSpeed", 20000)
    MillTool3.Name = RegistryRead:GetString("MillTool3.Name", "Tool Not Selected")
    MillTool3.SpindleSpeed = RegistryRead:GetInt("MillTool3.SpindleSpeed", 20000)
    MillTool4.Name = RegistryRead:GetString("MillTool4.Name", "Tool Not Selected")
    MillTool4.SpindleSpeed = RegistryRead:GetInt("MillTool4.SpindleSpeed", 20000)
    MillTool5.Name = RegistryRead:GetString("MillTool5.Name", "Tool Not Selected")
    MillTool5.SpindleSpeed = RegistryRead:GetInt("MillTool5.SpindleSpeed", 20000)
    MillTool6.Name = RegistryRead:GetString("MillTool6.Name", "Tool Not Selected")
    MillTool6.SpindleSpeed = RegistryRead:GetInt("MillTool6.SpindleSpeed", 20000)
    Project.CodeBy = RegistryRead:GetString("Project.CodeBy", "JimAndi Gadgets")
    Project.DatFile = RegistryRead:GetString("Project.DatFile", "Default")
    Project.CabinetName = RegistryRead:GetString("Project.CabinetName", "C1")
    Project.ProgramContact = RegistryRead:GetString("Project.ProgramContact", "Who")
    Project.ProgramName = RegistryRead:GetString("Project.ProgramName", "Blum Drawer Maker")
    Project.ProgramVersion = RegistryRead:GetString("Project.ProgramVersion", string.format(Project.ProgramVersion))
    Project.ProgramYear = RegistryRead:GetString("Project.ProgramYear", "2020")
    Project.ContactEmail = RegistryRead:GetString("Project.ContactEmail", "Default@Email.com")
    Project.ContactName = RegistryRead:GetString("Project.ContactName", "WHO")
    Project.ContactPhoneNumber = RegistryRead:GetString("Project.ContactPhoneNumber", "(123)456-7890")
    Project.ProjectName = RegistryRead:GetString("Project.ProjectName", "DRAWER PROJECTS")
    Project.ProjectPath = RegistryRead:GetString("Project.ProjectPath", "Default")
    DialogWindow.AboutXY = RegistryRead:GetString("DialogWindow.AboutXY", "719 x 581")
    DialogWindow.DrawerXY = RegistryRead:GetString("DialogWindow.DrawerXY", "580 x 493")
    DialogWindow.LayersXY = RegistryRead:GetString("DialogWindow.LayersXY", "495 x 453")
    DialogWindow.MillingXY = RegistryRead:GetString("DialogWindow.MillingXY", "578 x 337")
    DialogWindow.ProjectXY = RegistryRead:GetString("DialogWindow.ProjectXY", "576 x 298")
    DialogWindow.HelpMainXY = RegistryRead:GetString("DialogWindow.HelpMainXY", "785 x 639")
    DialogWindow.HelpSubXY = RegistryRead:GetString("DialogWindow.HelpSubXY", "781 x 643")
    DialogWindow.HelpXY = RegistryRead:GetString("DialogWindow.HelpXY", "617 x 613")
    DialogWindow.ImportSettingsXY = RegistryRead:GetString("DialogWindow.ImportSettingsXY", "725 x 145")
    DialogWindow.ScreenScale = RegistryRead:GetString("DialogWindow.ScreenScale", "100%") -- Added by Sharkcutup 7/10/2025
end -- function end
-- =====================================================]]
function RegistryWriter() -- Write to Registry values
    local RegistryWrite = Registry(Project.RegName)
    local RegValue -- Blum hardware options fixed; not persisted as user settings
    RegValue = RegistryWrite:SetString("Milling.JointStyleName", Milling.JointStyleName)
    RegValue = RegistryWrite:SetString("Milling.LNBackPocket", Milling.LNBackPocket)
    RegValue = RegistryWrite:SetString("Milling.LNBackPocketColor", Milling.LNBackPocketColor)
    RegValue = RegistryWrite:SetString("Milling.LNBackProfile", Milling.LNBackProfile)
    RegValue = RegistryWrite:SetString("Milling.LNBackProfileColor", Milling.LNBackProfileColor)
    RegValue = RegistryWrite:SetString("Milling.LNBlum", Milling.LNBlum) -- Yes or No
    RegValue = RegistryWrite:SetString("Milling.LNBlumColor", Milling.LNBlumColor)
    RegValue = RegistryWrite:SetString("Milling.LNBottomProfile", Milling.LNBottomProfile)
    RegValue = RegistryWrite:SetString("Milling.LNBottomProfileColor", Milling.LNBottomProfileColor)
    RegValue = RegistryWrite:SetString("Milling.LNDrawNotes", Milling.LNDrawNotes)
    RegValue = RegistryWrite:SetString("Milling.LNDrawNotesColor", Milling.LNDrawNotesColor)
    RegValue = RegistryWrite:SetString("Milling.LNFingerBox", Milling.LNFingerBox)
    RegValue = RegistryWrite:SetString("Milling.LNFingerBoxColor", Milling.LNFingerBoxColor)
    RegValue = RegistryWrite:SetString("Milling.LNFrontPocket", Milling.LNFrontPocket)
    RegValue = RegistryWrite:SetString("Milling.LNFrontPocketColor", Milling.LNFrontPocketColor)
    RegValue = RegistryWrite:SetString("Milling.LNFrontProfile", Milling.LNFrontProfile)
    RegValue = RegistryWrite:SetString("Milling.LNFrontProfileColor", Milling.LNFrontProfileColor)
    RegValue = RegistryWrite:SetString("Milling.LNPartLabels", Milling.LNPartLabels)
    RegValue = RegistryWrite:SetString("Milling.LNPartLabelsColor", Milling.LNPartLabelsColor)
    RegValue = RegistryWrite:SetString("Milling.LNSidePocket", Milling.LNSidePocket)
    RegValue = RegistryWrite:SetString("Milling.LNSidePocketColor", Milling.LNSidePocketColor)
    RegValue = RegistryWrite:SetString("Milling.LNSideProfile", Milling.LNSideProfile)
    RegValue = RegistryWrite:SetString("Milling.LNSideProfileColor", Milling.LNSideProfileColor)
    RegValue = RegistryWrite:SetDouble("Milling.PartGap", Milling.PartGap)
    RegValue = RegistryWrite:SetDouble("Milling.PocketToolDia", Milling.PocketToolDia)
    RegValue = RegistryWrite:SetDouble("Milling.FingerToolDia", Milling.FingerToolDia)
    RegValue = RegistryWrite:SetDouble("Milling.ProfileToolDia", Milling.ProfileToolDia)
    RegValue = RegistryWrite:SetDouble("Milling.DadoClearance", Milling.DadoClearance)
    RegValue = RegistryWrite:SetDouble("Milling.FingerClearance", Milling.FingerClearance)
    RegValue = RegistryWrite:SetDouble("Milling.DadoHeight", Milling.DadoHeight)
    RegValue = RegistryWrite:SetDouble("Milling.BlindTabThickness", Milling.BlindTabThickness)
    RegValue = RegistryWrite:SetString("Milling.DrawerStyleName", Milling.DrawerStyleName)
    RegValue = RegistryWrite:SetString("MillTool1.Name", MillTool1.Name)
    RegValue = RegistryWrite:SetBool("MillTool1.InMM", MillTool1.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool1.ToolDia", MillTool1.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool1.Stepdown", MillTool1.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool1.Stepover", MillTool1.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool1.RateUnits", MillTool1.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool1.FeedRate", MillTool1.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool1.PlungeRate", MillTool1.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool1.SpindleSpeed", MillTool1.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool1.ToolNumber", MillTool1.ToolNumber)
    RegValue = RegistryWrite:SetString("MillTool2.Name", MillTool2.Name)
    RegValue = RegistryWrite:SetBool("MillTool2.InMM", MillTool2.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool2.ToolDia", MillTool2.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool2.Stepdown", MillTool2.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool2.Stepover", MillTool2.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool2.RateUnits", MillTool2.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool2.FeedRate", MillTool2.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool2.PlungeRate", MillTool2.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool2.SpindleSpeed", MillTool2.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool2.ToolNumber", MillTool2.ToolNumber)
    RegValue = RegistryWrite:SetString("MillTool3.Name", MillTool3.Name)
    RegValue = RegistryWrite:SetBool("MillTool3.InMM", MillTool3.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool3.ToolDia", MillTool3.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool3.Stepdown", MillTool3.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool3.Stepover", MillTool3.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool3.RateUnits", MillTool3.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool3.FeedRate", MillTool3.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool3.PlungeRate", MillTool3.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool3.SpindleSpeed", MillTool3.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool3.ToolNumber", MillTool3.ToolNumber)
    RegValue = RegistryWrite:SetString("MillTool4.Name", MillTool4.Name)
    RegValue = RegistryWrite:SetBool("MillTool4.InMM", MillTool4.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool4.ToolDia", MillTool4.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool4.Stepdown", MillTool4.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool4.Stepover", MillTool4.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool4.RateUnits", MillTool4.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool4.FeedRate", MillTool4.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool4.PlungeRate", MillTool4.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool4.SpindleSpeed", MillTool4.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool4.ToolNumber", MillTool4.ToolNumber)
    RegValue = RegistryWrite:SetString("MillTool5.Name", MillTool5.Name)
    RegValue = RegistryWrite:SetBool("MillTool5.InMM", MillTool5.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool5.ToolDia", MillTool5.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool5.Stepdown", MillTool5.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool5.Stepover", MillTool5.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool5.RateUnits", MillTool5.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool5.FeedRate", MillTool5.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool5.PlungeRate", MillTool5.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool5.SpindleSpeed", MillTool5.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool5.ToolNumber", MillTool5.ToolNumber)
    RegValue = RegistryWrite:SetString("MillTool6.Name", MillTool6.Name)
    RegValue = RegistryWrite:SetBool("MillTool6.InMM", MillTool6.InMM)
    RegValue = RegistryWrite:SetDouble("MillTool6.ToolDia", MillTool6.ToolDia)
    RegValue = RegistryWrite:SetDouble("MillTool6.Stepdown", MillTool6.Stepdown)
    RegValue = RegistryWrite:SetDouble("MillTool6.Stepover", MillTool6.Stepover)
    RegValue = RegistryWrite:SetInt("MillTool6.RateUnits", MillTool6.RateUnits)
    RegValue = RegistryWrite:SetDouble("MillTool6.FeedRate", MillTool6.FeedRate)
    RegValue = RegistryWrite:SetDouble("MillTool6.PlungeRate", MillTool6.PlungeRate)
    RegValue = RegistryWrite:SetInt("MillTool6.SpindleSpeed", MillTool6.SpindleSpeed)
    RegValue = RegistryWrite:SetInt("MillTool6.ToolNumber", MillTool6.ToolNumber)
    RegValue = RegistryWrite:SetString("Project.CabinetName", Project.CabinetName)
    RegValue = RegistryWrite:SetString("Project.CodeBy", Project.CodeBy)
    RegValue = RegistryWrite:SetString("Project.ProgramContact", Project.ProgramContact)
    RegValue = RegistryWrite:SetString("Project.ProgramName", Project.ProgramName)
    RegValue = RegistryWrite:SetString("Project.ProgramVersion", Project.ProgramVersion)
    RegValue = RegistryWrite:SetString("Project.ProgramYear", Project.ProgramYear)
    RegValue = RegistryWrite:SetString("Project.ContactEmail", Project.ContactEmail)
    RegValue = RegistryWrite:SetString("Project.ContactName", Project.ContactName)
    RegValue = RegistryWrite:SetString("Project.ContactPhoneNumber", Project.ContactPhoneNumber)
    RegValue = RegistryWrite:SetString("Project.ProjectName", Project.ProjectName)
    RegValue = RegistryWrite:SetString("Project.ProjectPath", Project.ProjectPath)
    RegValue = RegistryWrite:SetString("Project.DatFile", Project.DatFile)
    RegValue = RegistryWrite:SetDouble("Drawer.OpeningDepth", Drawer.OpeningDepth)
    RegValue = RegistryWrite:SetDouble("Drawer.OpeningHeight", Drawer.OpeningHeight)
    RegValue = RegistryWrite:SetDouble("Drawer.OpeningWidth", Drawer.OpeningWidth)
    RegValue = RegistryWrite:SetDouble("Drawer.Width", Drawer.Width)
    RegValue = RegistryWrite:SetDouble("Drawer.Height", Drawer.Height)
    RegValue = RegistryWrite:SetDouble("Drawer.Length", Drawer.Length)
    RegValue = RegistryWrite:SetInt("Drawer.Count", Drawer.Count)
    RegValue = RegistryWrite:SetInt("Drawer.SideFingerCount", Drawer.SideFingerCount)
    RegValue = RegistryWrite:SetDouble("Drawer.SideFingerWidth", Drawer.SideFingerWidth)
    -- BottomDadoInset fixed; no need to write dynamic value
    -- RegValue = RegistryWrite:SetDouble("Drawer.BottomDadoInset", Drawer.BottomDadoInset)
    RegValue = RegistryWrite:SetDouble("Drawer.BackDadoInset", Drawer.BackDadoInset)
    RegValue = RegistryWrite:SetDouble("Drawer.BottomThickness", Drawer.BottomThickness)
    RegValue = RegistryWrite:SetDouble("Drawer.SideWidth", Drawer.SideWidth)
    RegValue = RegistryWrite:SetDouble("Drawer.SideThickness", Drawer.SideThickness)
    RegValue = RegistryWrite:SetDouble("Drawer.FrontThickness", Drawer.FrontThickness)
    RegValue = RegistryWrite:SetDouble("Drawer.FrontWidth", Drawer.FrontWidth)
    RegValue = RegistryWrite:SetDouble("Drawer.BackThickness", Drawer.BackThickness)
    RegValue = RegistryWrite:SetDouble("Drawer.BackWidth", Drawer.BackWidth)
    RegValue = RegistryWrite:SetDouble("Drawer.SideGap", Drawer.SideGap)
    RegValue = RegistryWrite:SetDouble("Drawer.BottomGap", Drawer.BottomGap)
    RegValue = RegistryWrite:SetDouble("Drawer.TopGap", Drawer.TopGap)
    RegValue = RegistryWrite:SetDouble("Drawer.SideLength", Drawer.SideLength)
    RegValue = RegistryWrite:SetDouble("Drawer.BackLength", Drawer.BackLength)
    RegValue = RegistryWrite:SetDouble("Drawer.FrontLength", Drawer.FrontLength)
    RegValue = RegistryWrite:SetDouble("Drawer.BottomPanelLength", Drawer.BottomPanelLength)
    RegValue = RegistryWrite:SetDouble("Drawer.BottomPanelWidth", Drawer.BottomPanelWidth)
    RegValue = RegistryWrite:SetString("DialogWindow.AboutXY", DialogWindow.AboutXY)
    RegValue = RegistryWrite:SetString("DialogWindow.HelpMainXY", DialogWindow.HelpMainXY)
    RegValue = RegistryWrite:SetString("DialogWindow.HelpSubXY", DialogWindow.HelpSubXY)
    RegValue = RegistryWrite:SetString("DialogWindow.DrawerXY", DialogWindow.DrawerXY)
    RegValue = RegistryWrite:SetString("DialogWindow.LayersXY", DialogWindow.LayersXY)
    RegValue = RegistryWrite:SetString("DialogWindow.MillingXY", DialogWindow.MillingXY)
    RegValue = RegistryWrite:SetString("DialogWindow.ProjectXY", DialogWindow.ProjectXY)
    RegValue = RegistryWrite:SetString("DialogWindow.ImportSettingsXY", DialogWindow.ImportSettingsXY)
    return true
end -- function end
-- =====================================================]]
function ExportWriter(xFile) -- Export All settings
    -- Writes new xText Line to a log file
    local fileW = io.open(xFile .. ".Export", "w")
    -- helper to escape backslashes and quotes in exported string values
    local function esc(s)
        if s == nil then
            return ""
        end
        return (tostring(s):gsub('\\', '\\\\'):gsub('"', '\\"'))
    end
    fileW:write([[DialogWindow.AboutXY = "]] .. DialogWindow.AboutXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.DrawerXY = "]] .. DialogWindow.DrawerXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.LayersXY = "]] .. DialogWindow.LayersXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.MillingXY = "]] .. DialogWindow.MillingXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.ProjectXY = "]] .. DialogWindow.ProjectXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.HelpMainXY = "]] .. DialogWindow.HelpMainXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.HelpSubXY = "]] .. DialogWindow.HelpSubXY .. [[" ]] .. "\n")
    fileW:write([[DialogWindow.HelpXY = "]] .. DialogWindow.HelpXY .. [[" ]] .. "\n")
    fileW:write([[Drawer.BackDadoInset = tonumber("]] .. ExD2S(Drawer.BackDadoInset) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BackLength = tonumber("]] .. ExD2S(Drawer.BackLength) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BackThickness = tonumber("]] .. ExD2S(Drawer.BackThickness) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BackWidth = tonumber("]] .. ExD2S(Drawer.BackWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BottomDadoInset = tonumber("]] .. ExD2S(Drawer.BottomDadoInset) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BottomGap = tonumber("]] .. ExD2S(Drawer.BottomGap) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BottomPanelLength = tonumber("]] .. ExD2S(Drawer.BottomPanelLength) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BottomPanelWidth = tonumber("]] .. ExD2S(Drawer.BottomPanelWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.BottomThickness = tonumber("]] .. ExD2S(Drawer.BottomThickness) .. [[") ]] .. "\n")
    fileW:write([[Drawer.Count = tonumber("]] .. ExD2S(Drawer.Count) .. [[") ]] .. "\n")
    fileW:write([[Drawer.FrontLength = tonumber("]] .. ExD2S(Drawer.FrontLength) .. [[") ]] .. "\n")
    fileW:write([[Drawer.FrontThickness = tonumber("]] .. ExD2S(Drawer.FrontThickness) .. [[") ]] .. "\n")
    fileW:write([[Drawer.FrontWidth = tonumber("]] .. ExD2S(Drawer.FrontWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.Height = tonumber("]] .. ExD2S(Drawer.Height) .. [[") ]] .. "\n")
    fileW:write([[Drawer.Length = tonumber("]] .. ExD2S(Drawer.Length) .. [[") ]] .. "\n")
    fileW:write([[Drawer.OpeningDepth = tonumber("]] .. ExD2S(Drawer.OpeningDepth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.OpeningHeight = tonumber("]] .. ExD2S(Drawer.OpeningHeight) .. [[") ]] .. "\n")
    fileW:write([[Drawer.OpeningWidth = tonumber("]] .. ExD2S(Drawer.OpeningWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideFingerCount = tonumber("]] .. ExD2S(Drawer.SideFingerCount) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideFingerWidth = tonumber("]] .. ExD2S(Drawer.SideFingerWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideGap = tonumber("]] .. ExD2S(Drawer.SideGap) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideLength = tonumber("]] .. ExD2S(Drawer.SideLength) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideThickness = tonumber("]] .. ExD2S(Drawer.SideThickness) .. [[") ]] .. "\n")
    fileW:write([[Drawer.SideWidth = tonumber("]] .. ExD2S(Drawer.SideWidth) .. [[") ]] .. "\n")
    fileW:write([[Drawer.TopGap = tonumber("]] .. ExD2S(Drawer.TopGap) .. [[") ]] .. "\n")
    fileW:write([[Drawer.Width = tonumber("]] .. ExD2S(Drawer.Width) .. [[") ]] .. "\n")
    fileW:write([[Milling.BlindTabThickness = tonumber("]] .. ExD2S(Milling.BlindTabThickness) .. [[") ]] .. "\n")
    -- Blum options fixed (not exported as variable settings)
    fileW:write([[Milling.DadoClearance = tonumber("]] .. ExD2S(Milling.DadoClearance) .. [[") ]] .. "\n")
    fileW:write([[Milling.DadoHeight = tonumber("]] .. ExD2S(Milling.DadoHeight) .. [[") ]] .. "\n")
    fileW:write([[Milling.DrawerStyleName = "]] .. Milling.DrawerStyleName .. [[" ]] .. "\n")
    fileW:write([[Milling.FingerClearance = tonumber("]] .. ExD2S(Milling.FingerClearance) .. [[") ]] .. "\n")
    fileW:write([[Milling.FingerToolDia = tonumber("]] .. ExD2S(Milling.FingerToolDia) .. [[") ]] .. "\n")
    fileW:write([[Milling.JointStyleName = "]] .. Milling.JointStyleName .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBackPocket = "]] .. Milling.LNBackPocket .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBackPocketColor = "]] .. Milling.LNBackPocketColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBackProfile = "]] .. Milling.LNBackProfile .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBackProfileColor = "]] .. Milling.LNBackProfileColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBlum = "]] .. Milling.LNBlum .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBlumColor = "]] .. Milling.LNBlumColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBottomProfile = "]] .. Milling.LNBottomProfile .. [[" ]] .. "\n")
    fileW:write([[Milling.LNBottomProfileColor = "]] .. Milling.LNBottomProfileColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNDrawNotes = "]] .. Milling.LNDrawNotes .. [[" ]] .. "\n")
    fileW:write([[Milling.LNDrawNotesColor = "]] .. Milling.LNDrawNotesColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFingerBox = "]] .. Milling.LNFingerBox .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFingerBoxColor = "]] .. Milling.LNFingerBoxColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFrontPocket = "]] .. Milling.LNFrontPocket .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFrontPocketColor = "]] .. Milling.LNFrontPocketColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFrontProfile = "]] .. Milling.LNFrontProfile .. [[" ]] .. "\n")
    fileW:write([[Milling.LNFrontProfileColor = "]] .. Milling.LNFrontProfileColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNPartLabels = "]] .. Milling.LNPartLabels .. [[" ]] .. "\n")
    fileW:write([[Milling.LNPartLabelsColor = "]] .. Milling.LNPartLabelsColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNSidePocket = "]] .. Milling.LNSidePocket .. [[" ]] .. "\n")
    fileW:write([[Milling.LNSidePocketColor = "]] .. Milling.LNSidePocketColor .. [[" ]] .. "\n")
    fileW:write([[Milling.LNSideProfile = "]] .. Milling.LNSideProfile .. [[" ]] .. "\n")
    fileW:write([[Milling.LNSideProfileColor = "]] .. Milling.LNSideProfileColor .. [[" ]] .. "\n")
    fileW:write([[MillTool1.FeedRate = tonumber("]] .. ExD2S(MillTool1.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.InMM = ]] .. bool2S(MillTool1.InMM) .. "\n")
    fileW:write([[MillTool1.Name = "]] .. esc(MillTool1.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool1.PlungeRate = tonumber("]] .. ExD2S(MillTool1.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.RateUnits = tonumber("]] .. tostring(MillTool1.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.SpindleSpeed = tonumber("]] .. tostring(MillTool1.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.Stepdown = tonumber("]] .. ExD2S(MillTool1.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.Stepover = tonumber("]] .. ExD2S(MillTool1.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.ToolDia = tonumber("]] .. ExD2S(MillTool1.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool1.ToolNumber = tonumber("]] .. tostring(MillTool1.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.FeedRate = tonumber("]] .. ExD2S(MillTool2.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.InMM = ]] .. bool2S(MillTool2.InMM) .. "\n")
    fileW:write([[MillTool2.Name = "]] .. esc(MillTool2.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool2.PlungeRate = tonumber("]] .. ExD2S(MillTool2.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.RateUnits = tonumber("]] .. tostring(MillTool2.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.SpindleSpeed = tonumber("]] .. tostring(MillTool2.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.Stepdown = tonumber("]] .. ExD2S(MillTool2.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.Stepover = tonumber("]] .. ExD2S(MillTool2.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.ToolDia = tonumber("]] .. ExD2S(MillTool2.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool2.ToolNumber = tonumber("]] .. tostring(MillTool2.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.FeedRate = tonumber("]] .. ExD2S(MillTool3.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.InMM = ]] .. bool2S(MillTool3.InMM) .. "\n")
    fileW:write([[MillTool3.Name = "]] .. esc(MillTool3.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool3.PlungeRate = tonumber("]] .. ExD2S(MillTool3.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.RateUnits = tonumber("]] .. tostring(MillTool3.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.SpindleSpeed = tonumber("]] .. tostring(MillTool3.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.Stepdown = tonumber("]] .. ExD2S(MillTool3.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.Stepover = tonumber("]] .. ExD2S(MillTool3.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.ToolDia = tonumber("]] .. ExD2S(MillTool3.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool3.ToolNumber = tonumber("]] .. tostring(MillTool3.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.FeedRate = tonumber("]] .. ExD2S(MillTool4.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.InMM = ]] .. bool2S(MillTool4.InMM) .. "\n")
    fileW:write([[MillTool4.Name = "]] .. esc(MillTool4.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool4.PlungeRate = tonumber("]] .. ExD2S(MillTool4.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.RateUnits = tonumber("]] .. tostring(MillTool4.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.SpindleSpeed = tonumber("]] .. tostring(MillTool4.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.Stepdown = tonumber("]] .. ExD2S(MillTool4.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.Stepover = tonumber("]] .. ExD2S(MillTool4.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.ToolDia = tonumber("]] .. ExD2S(MillTool4.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool4.ToolNumber = tonumber("]] .. tostring(MillTool4.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.FeedRate = tonumber("]] .. ExD2S(MillTool5.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.InMM = ]] .. bool2S(MillTool5.InMM) .. "\n")
    fileW:write([[MillTool5.Name = "]] .. esc(MillTool5.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool5.PlungeRate = tonumber("]] .. ExD2S(MillTool5.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.RateUnits = tonumber("]] .. tostring(MillTool5.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.SpindleSpeed = tonumber("]] .. tostring(MillTool5.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.Stepdown = tonumber("]] .. ExD2S(MillTool5.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.Stepover = tonumber("]] .. ExD2S(MillTool5.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.ToolDia = tonumber("]] .. ExD2S(MillTool5.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool5.ToolNumber = tonumber("]] .. tostring(MillTool5.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.FeedRate = tonumber("]] .. ExD2S(MillTool6.FeedRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.InMM = ]] .. bool2S(MillTool6.InMM) .. "\n")
    fileW:write([[MillTool6.Name = "]] .. esc(MillTool6.Name) .. [[" ]] .. "\n")
    fileW:write([[MillTool6.PlungeRate = tonumber("]] .. ExD2S(MillTool6.PlungeRate) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.RateUnits = tonumber("]] .. tostring(MillTool6.RateUnits) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.SpindleSpeed = tonumber("]] .. tostring(MillTool6.SpindleSpeed) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.Stepdown = tonumber("]] .. ExD2S(MillTool6.Stepdown) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.Stepover = tonumber("]] .. ExD2S(MillTool6.Stepover) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.ToolDia = tonumber("]] .. ExD2S(MillTool6.ToolDia) .. [[") ]] .. "\n")
    fileW:write([[MillTool6.ToolNumber = tonumber("]] .. tostring(MillTool6.ToolNumber) .. [[") ]] .. "\n")
    fileW:write([[Milling.PartGap = tonumber("]] .. ExD2S(Milling.PartGap) .. [[") ]] .. "\n")
    fileW:write([[Milling.PocketToolDia = tonumber("]] .. ExD2S(Milling.PocketToolDia) .. [[") ]] .. "\n")
    fileW:write([[Milling.ProfileToolDia = tonumber("]] .. ExD2S(Milling.ProfileToolDia) .. [[") ]] .. "\n")
    fileW:write([[Project.CodeBy = "]] .. Project.CodeBy .. [[" ]] .. "\n")
    fileW:write([[Project.ContactEmail = "]] .. Project.ContactEmail .. [[" ]] .. "\n")
    fileW:write([[Project.ContactName = "]] .. Project.ContactName .. [[" ]] .. "\n")
    fileW:write([[Project.ContactPhoneNumber = "]] .. Project.ContactPhoneNumber .. [[" ]] .. "\n")
    fileW:write([[Project.DatFile = ]] .. string.char(91) .. string.char(91) .. Project.DatFile .. string.char(93) ..
                    string.char(93) .. "\n")
    fileW:write([[Project.CabinetName = "]] .. Project.CabinetName .. [[" ]] .. "\n")
    fileW:write([[Project.ProgramContact = "]] .. Project.ProgramContact .. [[" ]] .. "\n")
    fileW:write([[Project.ProgramName = "]] .. Project.ProgramName .. [[" ]] .. "\n")
    fileW:write([[Project.ProgramVersion = "]] .. Project.ProgramVersion .. [[" ]] .. "\n")
    fileW:write([[Project.ProgramYear = "]] .. Project.ProgramYear .. [[" ]] .. "\n")
    fileW:write([[Project.ProjectName = "]] .. Project.ProjectName .. [[" ]] .. "\n")
    fileW:write([[Project.ProjectPath = ]] .. string.char(91) .. string.char(91) .. Project.ProjectPath ..
                    string.char(93) .. string.char(93) .. "\n")
    fileW:close()
    return true
end -- function end
-- =============== End of File =========================]]
